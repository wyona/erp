<?xml version="1.0" encoding="ISO-8859-1"?>

<project xmlns:j="jelly:core" xmlns:ant="jelly:ant">
  <ant:property name="src.dir" value="src/erp/java"/>
  <ant:property name="build.dir" value="build"/>
  <ant:property name="classes.dir" value="${build.dir}/classes"/>
  <ant:property name="maven.repo.local" value="${user.home}/.maven/repository"/>
  <property
      name="classpath.jar"
      value="${maven.repo.local}/jsr170/jars/jcr-1.0.jar ${maven.repo.local}/log4j/jars/log4j-1.2.9.jar lib"/>
  
  <!--+
      | Fix classpath before compiling and compile
      +-->
  <preGoal name="java:compile">
    <ant:property name="oldclasspath" refid="maven.dependency.classpath" />
    <ant:path id="maven.dependency.classpath">
      <ant:pathelement path="${lenya.classes.dir}" />
      <ant:fileset dir="${lenya.lib.dir}">
        <ant:include name="*.jar" />
      </ant:fileset>
      <pathelement location="${maven.repo.local}/jsr170/jars/jcr-1.0.jar"/>
      <pathelement location="${maven.repo.local}/jackrabbit/jars/jackrabbit-api-1.0-dev-LCR209797.jar"/>
      <pathelement location="${maven.repo.local}/jackrabbit/jars/jackrabbit-commons-1.0-dev-LCR209797.jar"/>
      <pathelement location="${maven.repo.local}/jackrabbit/jars/jackrabbit-core-1.0-dev-LCR209797.jar"/>
      <pathelement location="${maven.repo.local}/log4j/jars/log4j-1.2.9.jar"/>
      <ant:pathelement path="${oldclasspath}" />
    </ant:path>
    <echo>${classes.dir}</echo>
    <ant:mkdir dir="${classes.dir}"/>
    <ant:javac srcdir="${src.dir}" destdir="${classes.dir}"
      classpathref="maven.dependency.classpath"
      debug="true"/>
    <!-- Uncomment this to debug classpath fixup -->
     <!--<ant:property name="debug.classpath" refid="maven.dependency.classpath" />
    <echo>[DEBUG] Classpath:</echo>
    <echo>${debug.classpath}</echo>--> 
  </preGoal>
  <!--+
      | Prepare OS-Specific settings
      +-->
  <goal name="erp:init-os">
    <echo>++Init ERP specific properties++</echo>
     <j:choose>
				<echo>The operating system is ${systemScope['os.name']}</echo>
				<j:when test="${systemScope['os.name'].startsWith('Linux')}">
          <property name="dotSlash" value="./"/>
          <property name="osExtension" value=".sh"/>
				</j:when>
				<j:when test="${systemScope['os.name'].startsWith('Windows')}">
          <property name="dotSlash" value=""/>
          <property name="osExtension" value=".bat"/>
				</j:when>
        <j:when test="${systemScope['os.name'].startsWith('Mac')}">
          <!--FIXME: Add MAC stuff here-->
				</j:when>
      </j:choose>
  </goal>
  <!--+
      | Build jar
      +-->
  <goal name="java:jar">
    <mkdir dir="${build.dir}/lib"/>
    <jar destfile="${build.dir}/lib/erp.jar" basedir="${classes.dir}" update="true">
      <manifest>
        <attribute name="class-path" value="${classpath.jar}"/>
        <attribute name="main-class" value="org.wyona.erp.cli.CLI"/>
      </manifest>
    </jar>
  </goal>
  <!--+
      | Deploy ERP to lenya
      +-->
  <goal name="erp:deploy" >
    <attainGoal name="java:compile" />
    <attainGoal name="java:jar" />
    <ant:copy toDir="${lenya.webapp.dir}/WEB-INF/classes" 
        overwrite="true">
        <fileset dir="${classes.dir}"/>
    </ant:copy>
    <ant:copy toDir="${lenya.webapp.dir}/WEB-INF/lib" 
        overwrite="true">
        <fileset dir="${build.dir}/lib"/>
    </ant:copy>   
  </goal>
  <!--+
      | Patch lenya's cocoon.xconf
      +-->
  <goal name="erp:patch-cocoon.xconf">
    <ant:taskdef name="xpatch" classname="XConfToolTask" classpath="${tools.tasks.dest}"/>
    <echo>Patching ${lenya.webapp.dir}/WEB-INF/cocoon.xconf</echo>
    <ant:copy file="${lenya.webapp.dir}/WEB-INF/cocoon.xconf"
        toFile="${lenya.webapp.dir}/WEB-INF/cocoon.xconf.ant_patch"
        overwrite="true"/>
      <!--+
          | ATTENTION: You must use addComments="false" here for the next check to work!
          +-->
    <ant:xpatch
      file="${lenya.webapp.dir}/WEB-INF/cocoon.xconf.ant_patch"
      srcdir="src/conf/cocoon.xconf"
      includes="*.xconf"
      addComments="false">
         ${systemScope.setProperty(
          'javax.xml.transform.TransformerFactory',
              'org.apache.xalan.processor.TransformerFactoryImpl')} 
    </ant:xpatch>
    <ant:checksum
      file="${lenya.webapp.dir}/WEB-INF/cocoon.xconf.ant_patch"
      property="cocoon.xconf.md5"/>
    <ant:checksum
      file="${lenya.webapp.dir}/WEB-INF/cocoon.xconf"
      property="${cocoon.xconf.md5}"
      verifyProperty="cocoon.xconf.isEqual"/>
    <ant:condition property="cocoon.xconf.copy">
      <ant:isfalse value="${cocoon.xconf.isEqual}"/>
    </ant:condition>
    <j:choose>
      <j:when test="${cocoon.xconf.isEqual}">
        <echo>File was not changed by patch.</echo>
      </j:when>
      <j:otherwise>
        <echo>Applying new cocoon.xconf</echo>
        <ant:copy file="${lenya.webapp.dir}/WEB-INF/cocoon.xconf.ant_patch"
            toFile="${lenya.webapp.dir}/WEB-INF/cocoon.xconf"
            overwrite="true"/>
        <ant:delete file="${lenya.webapp.dir}/WEB-INF/cocoon.xconf.ant_patch" />
      </j:otherwise>
    </j:choose>
  </goal>

  <!--+
      | Start lenya
      +-->
  <goal name="lenya:run">
    <attainGoal name="erp:init-os" />
    <j:choose>
      <j:when test="${debug}">
        <property name="lenyaTarget" value="servlet-debug"/>
      </j:when>
      <j:otherwise>
        <property name="lenyaTarget" value="servlet"/>
      </j:otherwise>
    </j:choose>
    <echo>++Will start lenya ${lenyaTarget}++</echo>
    <echo>Trying to use ${lenya.src.dir} with ant.home ${ant.home}</echo>
    <ant:exec dir="${lenya.src.dir}" executable="${dotSlash}lenya${osExtension}" failonerror="true" failifexecutionfails="true" vmlauncher="false">
      <ant:arg line="${lenyaTarget}"/>
    </ant:exec>
  </goal>
  <!--+
      | Build lenya
      +-->
  <goal name="lenya:build">
    <attainGoal name="erp:init-os" />
    <echo>++Will build lenya++</echo>
    <ant:exec dir="${lenya.src.dir}" executable="${dotSlash}build${osExtension}" failonerror="true" failifexecutionfails="true" vmlauncher="false"/>
  </goal>
  <!--+
      | Run ERP
      | 1. Deploy ERP
      | 2. Build lenya
      | 3. Start lenya
      +-->
  <goal name="erp:run">
    <attainGoal name="erp:deploy" />
    <attainGoal name="lenya:build" />
    <attainGoal name="lenya:run" />
  </goal>	
</project>
